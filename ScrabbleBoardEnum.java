/**
 * ScrabbleBoard enum
 * enum file for initialize Square in the game
 * Created by Patipon Petchtone 18 May 2019
 */
public enum ScrabbleBoardEnum
{
    /*
    Create enum for all square in board
    with corresponding letterMultiplier and wordMultiplier
    */
    _1_1(1,1,1,3),
    _1_2(1,2,1,1),
    _1_3(1,3,1,1),
    _1_4(1,4,2,1),
    _1_5(1,5,1,1),
    _1_6(1,6,1,1),
    _1_7(1,7,1,1),
    _1_8(1,8,1,3),
    _1_9(1,9,1,1),
    _1_10(1,10,1,1),
    _1_11(1,11,1,1),
    _1_12(1,12,2,1),
    _1_13(1,13,1,1),
    _1_14(1,14,1,1),
    _1_15(1,15,1,3),
    _2_1(2,1,1,1),
    _2_2(2,2,1,2),
    _2_3(2,3,1,1),
    _2_4(2,4,1,1),
    _2_5(2,5,1,1),
    _2_6(2,6,3,1),
    _2_7(2,7,1,1),
    _2_8(2,8,1,1),
    _2_9(2,9,1,1),
    _2_10(2,10,3,1),
    _2_11(2,11,1,1),
    _2_12(2,12,1,1),
    _2_13(2,13,1,1),
    _2_14(2,14,1,2),
    _2_15(2,15,1,1),
    _3_1(3,1,1,1),
    _3_2(3,2,1,1),
    _3_3(3,3,1,2),
    _3_4(3,4,1,1),
    _3_5(3,5,1,1),
    _3_6(3,6,1,1),
    _3_7(3,7,2,1),
    _3_8(3,8,1,1),
    _3_9(3,9,2,1),
    _3_10(3,10,1,1),
    _3_11(3,11,1,1),
    _3_12(3,12,1,1),
    _3_13(3,13,1,2),
    _3_14(3,14,1,1),
    _3_15(3,15,1,1),
    _4_1(4,1,2,1),
    _4_2(4,2,1,1),
    _4_3(4,3,1,1),
    _4_4(4,4,1,2),
    _4_5(4,5,1,1),
    _4_6(4,6,1,1),
    _4_7(4,7,1,1),
    _4_8(4,8,2,1),
    _4_9(4,9,1,1),
    _4_10(4,10,1,1),
    _4_11(4,11,1,1),
    _4_12(4,12,1,2),
    _4_13(4,13,1,1),
    _4_14(4,14,1,1),
    _4_15(4,15,2,1),
    _5_1(5,1,1,1),
    _5_2(5,2,1,1),
    _5_3(5,3,1,1),
    _5_4(5,4,1,1),
    _5_5(5,5,1,2),
    _5_6(5,6,1,1),
    _5_7(5,7,1,1),
    _5_8(5,8,1,1),
    _5_9(5,9,1,1),
    _5_10(5,10,1,1),
    _5_11(5,11,1,2),
    _5_12(5,12,1,1),
    _5_13(5,13,1,1),
    _5_14(5,14,1,1),
    _5_15(5,15,1,1),
    _6_1(6,1,1,1),
    _6_2(6,2,3,1),
    _6_3(6,3,1,1),
    _6_4(6,4,1,1),
    _6_5(6,5,1,1),
    _6_6(6,6,3,1),
    _6_7(6,7,1,1),
    _6_8(6,8,1,1),
    _6_9(6,9,1,1),
    _6_10(6,10,3,1),
    _6_11(6,11,1,1),
    _6_12(6,12,1,1),
    _6_13(6,13,1,1),
    _6_14(6,14,3,1),
    _6_15(6,15,1,1),
    _7_1(7,1,1,1),
    _7_2(7,2,1,1),
    _7_3(7,3,2,1),
    _7_4(7,4,1,1),
    _7_5(7,5,1,1),
    _7_6(7,6,1,1),
    _7_7(7,7,2,1),
    _7_8(7,8,1,1),
    _7_9(7,9,2,1),
    _7_10(7,10,1,1),
    _7_11(7,11,1,1),
    _7_12(7,12,1,1),
    _7_13(7,13,2,1),
    _7_14(7,14,1,1),
    _7_15(7,15,1,1),
    _8_1(8,1,1,3),
    _8_2(8,2,1,1),
    _8_3(8,3,1,1),
    _8_4(8,4,2,1),
    _8_5(8,5,1,1),
    _8_6(8,6,1,1),
    _8_7(8,7,1,1),
    _8_8(8,8,1,2),
    _8_9(8,9,1,1),
    _8_10(8,10,1,1),
    _8_11(8,11,1,1),
    _8_12(8,12,2,1),
    _8_13(8,13,1,1),
    _8_14(8,14,1,1),
    _8_15(8,15,1,3),
    _9_1(9,1,1,1),
    _9_2(9,2,1,1),
    _9_3(9,3,2,1),
    _9_4(9,4,1,1),
    _9_5(9,5,1,1),
    _9_6(9,6,1,1),
    _9_7(9,7,2,1),
    _9_8(9,8,1,1),
    _9_9(9,9,2,1),
    _9_10(9,10,1,1),
    _9_11(9,11,1,1),
    _9_12(9,12,1,1),
    _9_13(9,13,2,1),
    _9_14(9,14,1,1),
    _9_15(9,15,1,1),
    _10_1(10,1,1,1),
    _10_2(10,2,3,1),
    _10_3(10,3,1,1),
    _10_4(10,4,1,1),
    _10_5(10,5,1,1),
    _10_6(10,6,3,1),
    _10_7(10,7,1,1),
    _10_8(10,8,1,1),
    _10_9(10,9,1,1),
    _10_10(10,10,3,1),
    _10_11(10,11,1,1),
    _10_12(10,12,1,1),
    _10_13(10,13,1,1),
    _10_14(10,14,3,1),
    _10_15(10,15,1,1),
    _11_1(11,1,1,1),
    _11_2(11,2,1,1),
    _11_3(11,3,1,1),
    _11_4(11,4,1,1),
    _11_5(11,5,1,2),
    _11_6(11,6,1,1),
    _11_7(11,7,1,1),
    _11_8(11,8,1,1),
    _11_9(11,9,1,1),
    _11_10(11,10,1,1),
    _11_11(11,11,1,2),
    _11_12(11,12,1,1),
    _11_13(11,13,1,1),
    _11_14(11,14,1,1),
    _11_15(11,15,1,1),
    _12_1(12,1,2,1),
    _12_2(12,2,1,1),
    _12_3(12,3,1,1),
    _12_4(12,4,1,2),
    _12_5(12,5,1,1),
    _12_6(12,6,1,1),
    _12_7(12,7,1,1),
    _12_8(12,8,2,1),
    _12_9(12,9,1,1),
    _12_10(12,10,1,1),
    _12_11(12,11,1,1),
    _12_12(12,12,1,2),
    _12_13(12,13,1,1),
    _12_14(12,14,1,1),
    _12_15(12,15,2,1),
    _13_1(13,1,1,1),
    _13_2(13,2,1,1),
    _13_3(13,3,1,2),
    _13_4(13,4,1,1),
    _13_5(13,5,1,1),
    _13_6(13,6,1,1),
    _13_7(13,7,2,1),
    _13_8(13,8,1,1),
    _13_9(13,9,2,1),
    _13_10(13,10,1,1),
    _13_11(13,11,1,1),
    _13_12(13,12,1,1),
    _13_13(13,13,1,2),
    _13_14(13,14,1,1),
    _13_15(13,15,1,1),
    _14_1(14,1,1,1),
    _14_2(14,2,1,2),
    _14_3(14,3,1,1),
    _14_4(14,4,1,1),
    _14_5(14,5,1,1),
    _14_6(14,6,3,1),
    _14_7(14,7,1,1),
    _14_8(14,8,1,1),
    _14_9(14,9,1,1),
    _14_10(14,10,3,1),
    _14_11(14,11,1,1),
    _14_12(14,12,1,1),
    _14_13(14,13,1,1),
    _14_14(14,14,1,2),
    _14_15(14,15,1,1),
    _15_1(15,1,1,3),
    _15_2(15,2,1,1),
    _15_3(15,3,1,1),
    _15_4(15,4,2,1),
    _15_5(15,5,1,1),
    _15_6(15,6,1,1),
    _15_7(15,7,1,1),
    _15_8(15,8,1,3),
    _15_9(15,9,1,1),
    _15_10(15,10,1,1),
    _15_11(15,11,1,1),
    _15_12(15,12,2,1),
    _15_13(15,13,1,1),
    _15_14(15,14,1,1),
    _15_15(15,15,1,3);


    //position x of square
    private int posX;
    //position y of square
    private int posY;
    //letterMultiplier of the square
    private int letterMultiplier;
    //worMultiplier of the square
    private int wordMultiplier;
    /**
     * Constructor set letter,score, 
     * and number of duplication for each tile
     * @param posX      position x of square
     * @param posY      position y of square
     * @param letterMultiplier    letterMultiplier of square
     * @param wordMultiplier    wordMultiplier of square
     */
    ScrabbleBoardEnum(int posX,int posY,int letterMultiplier,int wordMultiplier) 
    {
        this.posX = posX;
        this.posY = posY;
        this.letterMultiplier = letterMultiplier;
        this.wordMultiplier = wordMultiplier;
    } 
    /**
     * Return position x of the square
     * @return position x of the square
     */
    public int getPosX() 
    {
        return posX;
    }
    /**
     * Return position y of the square
     * @return position y of the square
     */
    public int getPosY() 
    {
        return posY;
    }
    /**
     * Return letterMultiplier of the square
     * @return letterMultiplier of the square
     */
    public int getLetterMultiplier() 
    {
        return letterMultiplier;
    }
    /**
     * Return wordMultiplier of the square
     * @return wordMultiplier of the square
     */
    public int getWordMultiplier() 
    {
        return wordMultiplier;
    }
}